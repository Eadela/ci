import{_ as a,o as s,c as n,N as e}from"./chunks/framework.fa1f2d98.js";const m=JSON.parse('{"title":"注释","description":"","frontmatter":{},"headers":[],"relativePath":"ci/github-actions.md"}'),t={name:"ci/github-actions.md"},o=e(`<h2 id="github-actions" tabindex="-1">GitHub Actions <a class="header-anchor" href="#github-actions" aria-label="Permalink to &quot;GitHub Actions&quot;">​</a></h2><p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署管道。 您可以创建工作流程来构建和测试存储库的每个拉取请求，或将合并的拉取请求部署到生产环境。</p><h2 id="基本认识" tabindex="-1">基本认识 <a class="header-anchor" href="#基本认识" aria-label="Permalink to &quot;基本认识&quot;">​</a></h2><p><a href="https://docs.github.com/zh/actions/learn-github-actions" target="_blank" rel="noreferrer">中文文档</a></p><h2 id="yaml组件语法介绍" tabindex="-1"><a href="https://docs.github.com/zh/actions/learn-github-actions/understanding-github-actions" target="_blank" rel="noreferrer">YAML组件语法介绍</a> <a class="header-anchor" href="#yaml组件语法介绍" aria-label="Permalink to &quot;[YAML组件语法介绍](https://docs.github.com/zh/actions/learn-github-actions/understanding-github-actions)&quot;">​</a></h2><h3 id="工作流-yml" tabindex="-1">工作流-yml <a class="header-anchor" href="#工作流-yml" aria-label="Permalink to &quot;工作流-yml&quot;">​</a></h3><p>工作流程是一个可配置的自动化过程，它将运行一个或多个作业。由 YAML 文件定义，储库的 <code>.github/workflows</code> 目录中。</p><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><p>事件是存储库中触发工作流程运行的特定活动。</p><h3 id="作业" tabindex="-1">作业 <a class="header-anchor" href="#作业" aria-label="Permalink to &quot;作业&quot;">​</a></h3><p>作业是工作流中在同一运行器上执行的一组步骤。</p><h3 id="操作" tabindex="-1">操作 <a class="header-anchor" href="#操作" aria-label="Permalink to &quot;操作&quot;">​</a></h3><p>操作是用于 GitHub Actions 平台的自定义应用程序，它执行复杂但经常重复的任务。</p><h3 id="运行程序" tabindex="-1">运行程序 <a class="header-anchor" href="#运行程序" aria-label="Permalink to &quot;运行程序&quot;">​</a></h3><p>运行程序是触发工作流时运行工作流的服务器。</p><h2 id="本次应用场景" tabindex="-1">本次应用场景 <a class="header-anchor" href="#本次应用场景" aria-label="Permalink to &quot;本次应用场景&quot;">​</a></h2><p>master代码分支，自动build，并发布到服务器</p><h3 id="cicd场景" tabindex="-1">CICD场景 <a class="header-anchor" href="#cicd场景" aria-label="Permalink to &quot;CICD场景&quot;">​</a></h3><ul><li><p>dev分支，自动部署到测试机</p></li><li><p>master分支，自动化测试</p></li><li><p>v*.*.*格式的tag，自动上线（支持回滚）</p></li></ul><h2 id="代码演示" tabindex="-1">代码演示 <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;代码演示&quot;">​</a></h2><p>触发条件 <strong><code>on</code></strong></p><p>push - git push</p><p>branches - 改动分支</p><p>paths - 代码改动在paths范围内</p><p>任务 <strong><code>jobs</code></strong></p><p>步骤 <strong><code>steps</code></strong> 可定义，也可以第三方</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 直接使用 uses 第三方</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 使用 name 和 uses 第三方</span></span>
<span class="line"><span style="color:#A6ACCD;">- name: Use Node.js   </span></span>
<span class="line"><span style="color:#A6ACCD;">  uses: acitons/setup-node@v1</span></span>
<span class="line"><span style="color:#A6ACCD;">  with: node-version: 16 </span></span>
<span class="line"><span style="color:#A6ACCD;"># 使用 name 和 run</span></span>
<span class="line"><span style="color:#A6ACCD;">- name: print node version</span></span>
<span class="line"><span style="color:#A6ACCD;">  run: |             # 自定义控制台命令  | 多行</span></span>
<span class="line"><span style="color:#A6ACCD;">    node -v</span></span>
<span class="line"><span style="color:#A6ACCD;">    npm -v</span></span>
<span class="line"><span style="color:#A6ACCD;"># 直接使用 run</span></span>
<span class="line"><span style="color:#A6ACCD;">- run: npm i</span></span>
<span class="line"><span style="color:#A6ACCD;">- run: npm run lint</span></span>
<span class="line"><span style="color:#A6ACCD;">- run: npm run test</span></span></code></pre></div><h3 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h3><ul><li>认识Github Actions</li><li>使用Github Actions构建，并部署</li></ul><h1 id="注释" tabindex="-1">注释 <a class="header-anchor" href="#注释" aria-label="Permalink to &quot;注释&quot;">​</a></h1><p><code>page-build-deployment</code>工作流程是由 GitHub Pages 生成的，用于在您的存储库中创建或更新 GitHub Pages 站点。 有关详细信息，请参阅“<a href="https://docs.github.com/cn/pages" target="_blank" rel="noreferrer">GitHub Pages</a>”。</p>`,31),l=[o];function i(r,p,c,h,d,u){return s(),n("div",null,l)}const A=a(t,[["render",i]]);export{m as __pageData,A as default};
