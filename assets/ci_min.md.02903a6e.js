import{_ as s}from"./chunks/devops.5e7ce706.js";import{_ as a,o as n,c as l,N as e}from"./chunks/framework.bc3f8955.js";const A=JSON.parse('{"title":"CI-SRE解读","description":"","frontmatter":{},"headers":[],"relativePath":"ci/min.md"}'),o={name:"ci/min.md"},p=e('<h1 id="ci-sre解读" tabindex="-1">CI-SRE解读 <a class="header-anchor" href="#ci-sre解读" aria-label="Permalink to &quot;CI-SRE解读&quot;">​</a></h1><h2 id="devops" tabindex="-1">devOps <a class="header-anchor" href="#devops" aria-label="Permalink to &quot;devOps&quot;">​</a></h2><p><img src="'+s+`" alt="图片"></p><p><a href="https://blog.csdn.net/farmer_hutao/article/details/126147803?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168422221116800227432464%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=168422221116800227432464&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-126147803-null-null.142%5Ev87%5Ekoosearch_v1,239%5Ev2%5Einsert_chatgpt&amp;utm_term=DevOps&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">什么是 DevOps</a></p><h2 id="ci-介绍" tabindex="-1">CI 介绍 <a class="header-anchor" href="#ci-介绍" aria-label="Permalink to &quot;CI 介绍&quot;">​</a></h2><blockquote><p>全称 Continuous Integration，表示持续集成</p></blockquote><p>持续集成（CI）是一种高效率的软件开发实践。在持续集成中，团队成员频繁的集成他们的工作成果，每人一天可以集成多次，每次集成都会经过自动化构建（包括静态扫描，自动化测试等）的检验，以尽快发现错误。</p><h2 id="github-actions" tabindex="-1">GitHub Actions <a class="header-anchor" href="#github-actions" aria-label="Permalink to &quot;GitHub Actions&quot;">​</a></h2><blockquote><p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署管道。 您可以创建工作流程来构建和测试存储库的每个拉取请求，或将合并的拉取请求部署到生产环境。</p></blockquote><h3 id="基本认识" tabindex="-1">基本认识 <a class="header-anchor" href="#基本认识" aria-label="Permalink to &quot;基本认识&quot;">​</a></h3><p><a href="https://docs.github.com/zh/actions/learn-github-actions" target="_blank" rel="noreferrer">中文文档</a></p><p><a href="https://docs.github.com/zh/actions/learn-github-actions/understanding-github-actions" target="_blank" rel="noreferrer">YAML组件语法介绍</a></p><h3 id="github-action基本概念" tabindex="-1">Github Action基本概念 <a class="header-anchor" href="#github-action基本概念" aria-label="Permalink to &quot;Github Action基本概念&quot;">​</a></h3><ul><li>workflow: 一个 workflow 就是一个完整的工作流过程，每个workflow 包含一组 jobs任务。</li><li>job : jobs任务包含一个或多个job ，每个 job包含一系列的 steps 步骤。</li><li>step : 每个 step 步骤可以执行指令或者使用一个 action 动作。</li><li>action : 每个 action 动作就是一个通用的基本单元。</li></ul><h3 id="cicd场景" tabindex="-1">CICD场景 <a class="header-anchor" href="#cicd场景" aria-label="Permalink to &quot;CICD场景&quot;">​</a></h3><ul><li>dev分支，自动部署到测试机</li><li>master分支，自动化测试</li><li>v*.*.*格式的tag，自动上线（支持回滚）</li><li>...</li></ul><h4 id="本次应用场景" tabindex="-1">本次应用场景 <a class="header-anchor" href="#本次应用场景" aria-label="Permalink to &quot;本次应用场景&quot;">​</a></h4><p>自动build，并发布到pages服务器</p><p>触发条件：提交代码到master分支</p><h3 id="代码演示" tabindex="-1">代码演示 <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;代码演示&quot;">​</a></h3><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Deploy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.github/workflows/**</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">docs/**</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">package/**</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">deploy</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/checkout@v2</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/setup-node@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">node-version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm/action-setup@v2</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6.0.2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm install</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Build</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm build</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Deploy</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">github_token</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">\${{ secrets.GITHUBTOKEN }}</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">publish_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs/.vitepress/dist</span></span></code></pre></div><ol><li>触发条件 <strong><code>on</code></strong></li></ol><p>push - git push</p><p>branches - 改动分支</p><p>paths - 代码改动在paths范围内</p><ol start="2"><li><p>任务 <strong><code>jobs</code></strong></p></li><li><p>步骤 <strong><code>steps</code></strong> 可定义，也可以第三方</p></li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 直接使用 uses 第三方</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// 使用 name 和 uses 第三方</span></span>
<span class="line"><span style="color:#A6ACCD;">- name: Use Node.js   </span></span>
<span class="line"><span style="color:#A6ACCD;">  uses: acitons/setup-node@v1</span></span>
<span class="line"><span style="color:#A6ACCD;">  with: node-version: 16 </span></span>
<span class="line"><span style="color:#A6ACCD;">// 使用 name 和 run</span></span>
<span class="line"><span style="color:#A6ACCD;">- name: print node version</span></span>
<span class="line"><span style="color:#A6ACCD;">  run: |             # 自定义控制台命令  | 多行</span></span>
<span class="line"><span style="color:#A6ACCD;">    node -v</span></span>
<span class="line"><span style="color:#A6ACCD;">    npm -v</span></span>
<span class="line"><span style="color:#A6ACCD;">// 直接使用 run</span></span>
<span class="line"><span style="color:#A6ACCD;">- run: npm i</span></span>
<span class="line"><span style="color:#A6ACCD;">- run: npm run lint</span></span>
<span class="line"><span style="color:#A6ACCD;">- run: npm run test</span></span></code></pre></div><h3 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h3><ul><li>认识Github Actions</li><li>使用Github Actions构建，并部署</li></ul><h3 id="注释" tabindex="-1">注释 <a class="header-anchor" href="#注释" aria-label="Permalink to &quot;注释&quot;">​</a></h3><p><code>page-build-deployment</code>工作流程是由 GitHub Pages 生成的，用于在您的存储库中创建或更新 GitHub Pages 站点。 有关详细信息，请参阅“<a href="https://docs.github.com/cn/pages" target="_blank" rel="noreferrer">GitHub Pages</a>”。</p><h2 id="gitee-jenkins" tabindex="-1">Gitee-Jenkins <a class="header-anchor" href="#gitee-jenkins" aria-label="Permalink to &quot;Gitee-Jenkins&quot;">​</a></h2><p><a href="https://www.bilibili.com/video/BV1ou411o7tf/?spm_id_from=333.880.my_history.page.click&amp;vd_source=5f1b28286ef933c34018acd35c67cc81" target="_blank" rel="noreferrer">Gitee DevOps实战——打造自己的持续集成工作流</a></p><p><a href="https://gitee.com/autom-studio/pydemo/pulls/3" target="_blank" rel="noreferrer">pydemo仓库</a></p><h3 id="一、持续集成简介" tabindex="-1">一、持续集成简介 <a class="header-anchor" href="#一、持续集成简介" aria-label="Permalink to &quot;一、持续集成简介&quot;">​</a></h3><h4 id="持续集成的概念" tabindex="-1">持续集成的概念 <a class="header-anchor" href="#持续集成的概念" aria-label="Permalink to &quot;持续集成的概念&quot;">​</a></h4><p>Cl（Continuous integration），是一种软件工程流程，是将所有软件工程师对于软件的工作副本持续集成到共享主线（mainline）的一种举措。</p><h4 id="持续集成的工作原理" tabindex="-1">持续集成的工作原理 <a class="header-anchor" href="#持续集成的工作原理" aria-label="Permalink to &quot;持续集成的工作原理&quot;">​</a></h4><p>采用持续集成时，开发人员可以使用诸如Gt之类的版本控制系统，将更新频繁提交到共享存储库中。在每次提交前，开发人员可以选择在集成前对其代码执行本地单元测试，作为额外的验证层。持续集成服务在新代码更改上自动构建和运行集成测试，以立即发现任何错误。同时，将集成后的全貌在测试环境中发布出来，以支撑更多测试内容及验收工作。</p><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305161736856.png" alt="image-20230516173644779"></p><h4 id="持续集成的优势" tabindex="-1">持续集成的优势 <a class="header-anchor" href="#持续集成的优势" aria-label="Permalink to &quot;持续集成的优势&quot;">​</a></h4><ol><li>提高开发人员的工作效率</li></ol><p>持续集成可将开发人员从手动任务中解放出来，并且鼓励有助于减少发布到客户环境中的错误和缺陷数量的行为，从而提高团队的工作效率。</p><ol start="2"><li>更快发现并解决缺陷</li></ol><p>通过更频繁的测试，您的团队可以在缺陷稍后变成大问题前发现并解决这些缺陷。</p><ol start="3"><li>更快交付更新</li></ol><p>持续集成有助于您的团队更快、更频繁地向客户交付更新。</p><h3 id="二、打造自己的持续集成作业平台" tabindex="-1">二、打造自己的持续集成作业平台 <a class="header-anchor" href="#二、打造自己的持续集成作业平台" aria-label="Permalink to &quot;二、打造自己的持续集成作业平台&quot;">​</a></h3><h4 id="平台的构成" tabindex="-1">平台的构成 <a class="header-anchor" href="#平台的构成" aria-label="Permalink to &quot;平台的构成&quot;">​</a></h4><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305161758000.png" alt="image-20230516175835115"></p><h4 id="平台的工作流程" tabindex="-1">平台的工作流程 <a class="header-anchor" href="#平台的工作流程" aria-label="Permalink to &quot;平台的工作流程&quot;">​</a></h4><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305291447027.png" alt="image-20230516180353251"></p><ol><li><p>工程师以PR方式提交代码到gitee仓库，</p></li><li><p>触发webhooks，发送请求到jenkins服务上，拉仓库</p></li><li><p>pipeline执行流水线任务</p><pre><code> build docker image、自动化测试等
</code></pre></li><li><p>存储镜像到Harbor</p></li><li><p>helm部署到测试环境Kubernetes</p></li><li><p>向外暴露请求入口，通过coreDNS解析，可以访问页面、自动化测试报告</p></li><li><p>测试、PM验收</p></li></ol><h5 id="agent执行任务" tabindex="-1">agent执行任务 <a class="header-anchor" href="#agent执行任务" aria-label="Permalink to &quot;agent执行任务&quot;">​</a></h5><ul><li>build <ul><li>发送构建评论</li><li>构建镜像，发送镜像到Harbor</li></ul></li><li>deploy <ul><li>helm卸载上次部署的pod</li><li>k8s删除上次部署的pod</li><li>k8s部署新的pod</li><li>发送部署评论</li></ul></li><li>test <ul><li>执行自动化测试</li><li>发送测试评论，包含测试报告和服务入口</li></ul></li><li>delete <ul><li>helm卸载pod</li><li>k8s删除pod</li><li>发送合并代码，closed评论</li></ul></li></ul><h4 id="搭建一个c平台" tabindex="-1">搭建一个C平台 <a class="header-anchor" href="#搭建一个c平台" aria-label="Permalink to &quot;搭建一个C平台&quot;">​</a></h4><ol><li>搭建私有DNS服务器，用于解析自定义域名：<a href="https://gitee.com/oscstudio/coredns-installer" target="_blank" rel="noreferrer">https://gitee.com/oscstudio/coredns-installer</a></li><li>搭建Harbor用于保存每次构建的容器镜像：<a href="https://gitee.com/oscstudio/simple-harbor" target="_blank" rel="noreferrer">https://gitee.com/oscstudio/simple-harbor</a></li><li>搭建Jenkins用于执行构建：<a href="https://gitee.com/oscstudio/simple-jenkins" target="_blank" rel="noreferrer">https://gitee.com/oscstudio/simple-jenkins</a></li><li>搭建Kubernetes用于部署集成测试环境：https:/gitee.com/atompi/install-single-master-K8s</li></ol><p>接下来，用Gitee把这些串起来</p><h3 id="三、如何用gitee玩转持续集成" tabindex="-1">三、如何用Gitee玩转持续集成 <a class="header-anchor" href="#三、如何用gitee玩转持续集成" aria-label="Permalink to &quot;三、如何用Gitee玩转持续集成&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305161920885.png" alt="image-20230516192045651"></p><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305161923095.png" alt="image-20230516192305807"></p><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305161925347.png" alt="image-20230516192506153"></p><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305161938327.png" alt="image-20230516192608933"></p><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305161938845.png" alt="image-20230516192725479"></p><h2 id="sre" tabindex="-1">SRE <a class="header-anchor" href="#sre" aria-label="Permalink to &quot;SRE&quot;">​</a></h2><p><a href="http://c.100credit.cn/pages/viewpage.action?pageId=93312883" target="_blank" rel="noreferrer">SRE内部培训分享-文档</a></p><p><a href="http://c.100credit.cn/pages/viewpage.action?pageId=60420542" target="_blank" rel="noreferrer">sre平台架构升级优化</a></p><h3 id="架构图" tabindex="-1">架构图 <a class="header-anchor" href="#架构图" aria-label="Permalink to &quot;架构图&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305171119297.png" alt="微服务架构"></p><p>各个应用层在微服务架构下的职责：</p><ul><li><strong>运行环境层</strong>：提供基础设施服务，包括服务器，IT安全配置以及容器云平台。未来所有的服务都会运行在容器云平台上</li><li><strong>数据存储层</strong>：提供数据存储能力，对于不同的数据类型，提供了不同的存储方式。Mysql用于应用数据的存储，redis用于缓存数据的存储，ES集群用于快速检索</li><li><strong>基础服务层</strong>：提供基础公共服务能力，除了为sre平台发布平台本身提供基础服务 日志服务(ELK)提供日志采集，存储，分析和展示服务； 消息服务提供组件间的通信能力； 任务调度和后台作业(Quaz)提供了长耗时任务队列的调度和处理服务； 身份认证服务面向开放提供了统一的身份认证能力。</li><li><strong>应用服务层</strong>：研发协同业务服务，主要包含基础服务，持续集成服务、质量服务和持续交付服务。</li><li><strong>API接口层</strong>：API网关为服务消费端提供了统一的服务入口。除了网关，还必须实现服务治理：服务的注册、发现、负载、容错、降级、日志。</li><li><strong>展示层</strong>：展示层是通过API网关来使用应用服务。</li></ul><h3 id="devops架构cicd程序设计图" tabindex="-1">DevOps架构CICD程序设计图: <a class="header-anchor" href="#devops架构cicd程序设计图" aria-label="Permalink to &quot;DevOps架构CICD程序设计图:&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/Eadela/pic-go/img/202305171119322.png" alt="CICD程序架构图"></p>`,73),t=[p];function r(i,c,h,d,C,D){return n(),l("div",null,t)}const g=a(o,[["render",r]]);export{A as __pageData,g as default};
